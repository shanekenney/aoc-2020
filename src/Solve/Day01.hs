module Solve.Day01 where

input :: String
input = "1593\n1575\n1583\n1609\n1835\n2008\n1638\n1396\n1833\n1524\n1778\n1574\n1653\n1962\n1831\n1557\n1847\n1587\n1876\n1914\n1565\n1585\n1713\n35\n1862\n1885\n1735\n1497\n1989\n1871\n1923\n1917\n1719\n1797\n1222\n1493\n1939\n1139\n1260\n1622\n1625\n1683\n1742\n1996\n1579\n1703\n1692\n1920\n1536\n1965\n1936\n1947\n1800\n1556\n1633\n1530\n1612\n1764\n1810\n1845\n1750\n1854\n1973\n1512\n1856\n1568\n1634\n1630\n1602\n1555\n1681\n1844\n1544\n1909\n1690\n1851\n1785\n863\n1866\n1988\n1715\n1881\n1570\n1380\n1956\n777\n1693\n1717\n1724\n1975\n790\n1484\n1822\n1922\n1963\n1741\n1809\n1896\n1837\n1980\n1244\n1832\n1834\n1643\n1775\n1818\n1503\n1802\n1957\n1174\n1826\n1649\n1941\n1571\n1930\n1629\n1502\n2002\n1700\n1880\n1723\n1803\n2007\n1543\n1872\n1993\n1740\n1919\n1688\n1067\n1680\n1580\n1558\n1772\n1694\n1480\n1257\n1796\n2001\n537\n1701\n1613\n1784\n1559\n1482\n1968\n1604\n983\n1842\n1817\n1850\n1788\n1982\n1535\n1615\n453\n1895\n1443\n1308\n1533\n1714\n1765\n1037\n1992\n1843\n1883\n1981\n1525\n1038\n1540\n1766\n1886\n1546\n1716\n810\n1899\n1708\n1508\n1870\n1051\n1867\n1840\n1617\n1726\n1566\n1616\n1948\n1771\n1627\n1994\n1486\n1913\n1600\n1983\n1501\n2003\n1667\n1620\n1943\n1674"

parse :: String -> [Int]
parse = fmap read . lines

partOne :: String -> Int
partOne input =
  let expenses = parse input
   in head [x * y | x <- expenses, y <- expenses, x + y == 2020]

partTwo :: String -> Int
partTwo input =
  let expenses = parse input
   in head [x * y * z | x <- expenses, y <- expenses, z <- expenses, x + y + z == 2020]

